using PlanetaryEscape.Physics;
using UnityEngine;

namespace PlanetaryEscape.Players
{
    /// <summary>
    /// Boss ship vulnerability
    /// </summary>
    [RequireComponent(typeof(Collider))]
    public class Vulnerability : MonoBehaviour
    {
        #region Fields
        //Inspector fields
        [SerializeField]
        private int hp;
        
        //Private fields
        protected Boss boss;
        #endregion

        #region Properties
        /// <summary>
        /// If this Vulnerability is currently active
        /// </summary>
        public bool Active { get; private set; } = true;
        #endregion

        #region Methods
        /// <summary>
        /// Vulnerability hit event
        /// </summary>
        protected virtual void OnHit()
        {
            //Send a vulnerability hit message to the boss
            this.boss.HitVulnerability();

            //If out of hitpoints, destroy this vulnerability
            if (--this.hp == 0)
            {
                this.boss.DestroyVulnerability();
                Destroy(this.gameObject);
                this.Active = false;
            }
        }
        #endregion

        #region Functions
        private void Awake()
        {
            //Get boss component in parents
            this.boss = GetComponentInParent<Boss>();
            if (GameLogic.IsHard) { this.hp *= 2; }
        }

        private void OnTriggerEnter(Collider other)
        {
            //When hit by a projectile and active send a hit message
            if (this.Active && other.CompareTag("Projectile") && other.GetComponent<Bolt>().Active)
            {
                OnHit();
            }
        }
        #endregion
    }
}